name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Type of release: patch, minor, major"
        required: true
        default: patch

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout репозитория
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      # 2. Setup Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20 # у тебя vite требует >=20

      # 3. Установка зависимостей
      - name: Install dependencies
        run: npm ci

      # 4. Подготовка CHANGELOG.md (если нет)
      - name: Ensure CHANGELOG.md exists
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            git add CHANGELOG.md
            git commit -m "chore: add initial CHANGELOG.md"
            git push origin dev
          fi

      # 5. Настройка Git identity
      - name: Set Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # 6. Создание релиза с standard-version
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git checkout dev
          git pull origin dev

          npx standard-version --release-as ${{ github.event.inputs.release_type }}

          git push origin dev --follow-tags

          NEW_TAG=$(git describe --tags --abbrev=0)
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      # 7. Создание Pull Request в main
      - name: Create Pull Request to main
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "Creating PR from dev to main"
          gh pr create \
            --base main \
            --head dev \
            --title "chore(release): merge release $NEW_TAG to main" \
            --body "Auto-created release PR for version $NEW_TAG" || echo "PR already exists"

      # 8. Создание GitHub Release
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "Creating GitHub Release $NEW_TAG"
          gh release create "$NEW_TAG" \
            --title "Release $NEW_TAG" \
            --notes "Автоматический релиз из dev"

      # 9. (Опционально) Обновление README с последним changelog
      - name: Update README with latest changelog
        run: |
          LATEST_LOG=$(awk '/^## \[/{print; exit}' CHANGELOG.md)
          sed -i "s/LATEST_RELEASE_PLACEHOLDER/${LATEST_LOG}/" README.md || true
          git add README.md
          git commit -m "chore: update README with latest changelog $NEW_TAG" || true
          git push origin dev
